// Generated by CoffeeScript 1.6.3
(function() {
  var SourceTree, esprima, fs;

  fs = require('fs');

  esprima = require('esprima');

  SourceTree = (function() {
    function SourceTree(path) {
      var FILE_EXTENSION, files, readFiles, reports, walkFiles;
      FILE_EXTENSION = '.js';
      files = {};
      reports = {};
      walkFiles = function(dir, done) {
        var i, list, next, results;
        results = [];
        list = fs.readdirSync(dir);
        i = 0;
        next = function() {
          var file, stat;
          file = list[i++];
          if (!file) {
            return done(null, results, dir);
          }
          file = dir + "/" + file;
          stat = fs.statSync(file);
          if (stat && stat.isDirectory()) {
            return walkFiles(file, function(err, res) {
              results = results.concat(res);
              return next();
            });
          } else {
            results.push(file);
            return next();
          }
        };
        return next();
      };
      readFiles = function(err, results, dirname) {
        if (err) {
          throw new Error(err);
        }
        return results.forEach(function(filename) {
          var content, e, syntax;
          if (filename.substr(-3) !== FILE_EXTENSION) {
            return;
          }
          if (!files[filename]) {
            files[filename] = {};
          }
          content = fs.readFileSync(filename, 'utf-8');
          files[filename].content = content;
          files[filename].path = filename;
          try {
            syntax = esprima.parse(content, {
              tolerant: true,
              loc: true
            });
            return files[filename].syntax = syntax;
          } catch (_error) {
            e = _error;
            return files[filename].syntax = e;
          }
        });
      };
      walkFiles(path, readFiles);
      this.getPath = function() {
        return path;
      };
      this.getFiles = function() {
        return files;
      };
      this.addReport = function(filename, report) {
        reports[filename] = report || {};
        return reports[filename].path = filename;
      };
      this.updateReport = function(filename, key, val) {
        if (!reports[filename]) {
          return;
        }
        return reports[filename][key] = val;
      };
      this.getReport = function(filename) {
        return reports[filename];
      };
      this.getFormatterReports = function() {
        var formatterReports, name, report;
        formatterReports = {
          reports: []
        };
        for (name in reports) {
          report = reports[name];
          formatterReports.reports.push(report);
        }
        return formatterReports;
      };
      this.getReports = function() {
        return reports;
      };
    }

    return SourceTree;

  })();

  exports.SourceTree = SourceTree;

}).call(this);
